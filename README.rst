
===========================
Sage QuasiSplines  Module Repository
===========================

Some sage-implemented routies for computing with quasisplines.


Usage
-----

See the jupyter notebook...
See GUIDE.rst too...


Features
--------

It's got it all, everything, the full monty! ...and yet minimal...

Demonstration
-------------

The Jupyter Notebook

    jupyter notebook quasisplines_demo.ipynb

contains example code and some data visualizations.

Installation
------------

    python setup.py install --user

Documentation
-------------

In addition to this file (./README.rst), the documentation is generated by Sphinx. From within ./docs run

    make html

This will make a file called ./docs/_build/html/index.html that is the html entry point to the documentation.

Maintence simply requires adding automodule entries as needed.

Copyright & License
-------------------

The project has the GNU GENERAL PUBLIC LICENSE found in the file LICENSE.

Version Control
---------------

./ is a Git repository.

MAINTENANCE: Follow
        'Git Tutorial for Beginners: Command-Line Fundamentals' 
by Corey Shafer.

    $ git add -A
    $ git commit -m "informative message"
    $ git push origin master

CREATION: It was created by making a .gitignore file and then entering

    $ git init
    $ git add .
    $ git commit -m "First commit"
    $ git config --global core.editor "emacs -nw"
    $ git commit -a

(
INSTALLATION: ...

INITIALIZATION:
$ git config --global user.name "Patrick Clarke" &&
$ git config --global user.email "pattyclarke@gmail.com"
)
 
Environment
-----------

There is an ./environment.yml file.

MAINTENANCE: None.

CREATION: It was was made by 

    $ conda config --add channels conda-forge
    $ conda create --name quasisplines sage
    $ source activate quasisplines
    $ conda env export > environment.yml

and setup with:

    $ conda env create -f environment.yml

Management
----------

For SAGE CODE files, the Makefile allows make to take .sage files in ./ and "preparse" them into .py files in ./sagednd:

    make preparsed

creates ./sagednd/dnd_ability_rolls.py from ./dnd_ability_rolls.sage, and ./sagednd/abstract_fitting.py from ./abstract_fitting.sage

There is also a version of 'make preparsed' for SAGE TEST files in the ./tests/ directory.

Testing
-------

PYTEST: With pytest, we can run

    python -m pytest

This runs the tests in ./tests/

SAGE TEST: Sages version of doctest can be run by

    sage -t dnd_ability_rolls.sage
    sage -t abstract_fitting.sage


Project Structure
-----------------

- Code:
  - ./dnd_ability_rolls.sage
  - ./sagednd/dnd_ability_rolls.py
  - ./abstract_fitting.sage
  - ./sagednd/abstract_fitting.py
    
- Data & Serialization:
  - ./dnd_ability_rolls.json

- Demonstration:
  - ./sagednd_demo.ipynb

- Installation:
  - ./setup.py

- Documentation:
  - ./README.rstProject Structure
-----------------

- Code:
  - ./quasisplines.sage
  - ./qspline_objects.sage
  - ./quasisplines/quasisplines.py
  - ./quasisplines/qspline_objects.py

- Data & Serialization:
  - XXX/XXX.json

- Demonstration:
  - ./quasisplines_demo.ipynb

- Installation:
  - ./quasisplines/setup.py (no setup.py in this one)

- Documentation:
  - ./README.rst
  - XXX./docs/index.rst
  - XXX./docs/config.py
  - XXX./docs/_build/html/index.html

- Legal:
  - ./LICENSE

- Version Control:
  - ./.gitignore

- Environment:
  - ./environment.yml

- Management:
  - ./Makefile
  - ./tests/Makefile

- Tests:
  - ./tests/context.py
  - ./tests/test_quasisplines.sage
  - ./tests/test_quasisplines.py
